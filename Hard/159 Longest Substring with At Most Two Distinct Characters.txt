public class Solution {
    public int lengthOfLongestSubstringTwoDistinct(String s) {
        int length = 0;
        int start = 0;
        int end = 0;
        int count = 0;
        int[] last = new int[2];
        char[] chars = new char[2];
        while (end < s.length()) {
            char c = s.charAt(end);
            int i = 0;
            if (count == 2) {
                if (chars[0] == c || chars[1] == c) {
                    i = (chars[0] == c) ? 0 : 1;
                } else {
                    i = (last[0] < last[1]) ? 0 : 1;
                    start = last[i] + 1;
                }
            } else {
                if (chars[0] != c) {
                    i = count;
                    count += 1;
                }
            }
            chars[i] = c;
            last[i] = end;
            end += 1;
            length = Math.max(end - start, length);
        }
        return length;
    }
}