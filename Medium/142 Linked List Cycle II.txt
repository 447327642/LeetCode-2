/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode detectCycle(ListNode head) {
        if (head == null || head.next == null) {
            return null;
        }
        ListNode walker = head;
        ListNode runner = head.next;
        while (walker != runner) {
            if (runner.next == null || runner.next.next == null) {
                return null;
            }
            walker = walker.next;
            runner = runner.next.next;
        }
        walker = head;
        runner = runner.next;
        while (walker != runner) {
            walker = walker.next;
            runner = runner.next;
        }
        return walker;
    }
}