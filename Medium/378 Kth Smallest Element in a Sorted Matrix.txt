public class Solution {
    public int kthSmallest(int[][] matrix, int k) {
        int n = matrix.length;
        PriorityQueue<Integer> pq = new PriorityQueue<>(new Comparator<Integer>(){
                public int compare(Integer i1, Integer i2) {
                    int x1 = i1 / n;
                    int y1 = i1 % n;
                    int x2 = i2 / n;
                    int y2 = i2 % n;
                    return matrix[x1][y1] - matrix[x2][y2];
                }
            });
        for (int i = 0; i < n; i++) {
            pq.add(i * n);
        }
        for (int i = 1; i < k; i++) {
            int cur = pq.poll();
            if (cur % n != n - 1) {
                pq.add(cur + 1);
            }
        }
        int kth = pq.poll();
        return matrix[kth / n][kth % n];
    }
}