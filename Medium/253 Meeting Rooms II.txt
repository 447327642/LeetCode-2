/**
 * Definition for an interval.
 * public class Interval {
 *     int start;
 *     int end;
 *     Interval() { start = 0; end = 0; }
 *     Interval(int s, int e) { start = s; end = e; }
 * }
 */
public class Solution {
    public int minMeetingRooms(Interval[] intervals) {
        int len = intervals.length;
        int[] start = new int[len];
        int[] end = new int[len];
        for (int i = 0; i < len; i++) {
            start[i] = intervals[i].start;
            end[i] = intervals[i].end;
        }
        Arrays.sort(start);
        Arrays.sort(end);
        int i = 0;
        int j = 0;
        int temp = Integer.MIN_VALUE;
        int count = 0;
        int res = 0;
        while (j < len) {
            temp = end[j];
            while (i < len && start[i] < temp) {
                i += 1;
                count += 1;
            }
            res = Math.max(count, res);
            count -= 1;
            j += 1;
        }
        return res;
    }
}